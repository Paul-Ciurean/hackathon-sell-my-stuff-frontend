name: deploy things

on: 
  push:
    branches: 
      - main

permissions: 
  id-token: write 

jobs: 
  terraform: 
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform

    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@main
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - uses: actions/checkout@v4
      - uses: hashicorp/setup-terraform@v3
        with: 
          terraform_version: "1.13"
      
      - name: Init
        run: terraform init

      - name: Apply
        run: terraform apply -auto-approve

  frontend:
    runs-on: ubuntu-latest
    needs: terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.19"
        
      - name: NPM install
        run: npm install

      - name: NPM build
        run: npm run build

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Clear existing S3 contents
        run: aws s3 rm s3://${{ secrets.AWS_S3_BUCKET }} --recursive

      - name: Sync files to S3
        run: aws s3 sync dist s3://${{ secrets.AWS_S3_BUCKET }} --delete

      - name: Create CloudFront invalidation
        run: |
          aws cloudfront create-invalidation \
          --distribution-id ${{ secrets.AWS_CLOUDFRONT_DIST_ID }} \
          --paths "/*"

      